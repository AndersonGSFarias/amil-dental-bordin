/*! tailwindcss v4.1.13 | MIT License | https://tailwindcss.com */
@import url("https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-xs: 20rem;
    --container-md: 28rem;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --font-poppins: "Poppins", sans-serif;
    --color-primary: #29196d;
    --color-secundary: #4f14ff;
    --color-third: #f1edff;
    --color-fourth: #00adff;
    --color-font-primary: #ffffff;
    --color-font-secundary: #6e6e6e;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .fixed {
    position: fixed;
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1 {
    top: calc(var(--spacing) * 1);
  }
  .top-\[3\.1\] {
    top: 3.1;
  }
  .top-\[3\.2\] {
    top: 3.2;
  }
  .top-\[3\.12\] {
    top: 3.12;
  }
  .top-\[3\.125\] {
    top: 3.125;
  }
  .top-\[3\.125rem\] {
    top: 3.125rem;
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .z-1 {
    z-index: 1;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .mx-\[1\.75rem\] {
    margin-inline: 1.75rem;
  }
  .my-\[1\.75rem\] {
    margin-block: 1.75rem;
  }
  .my-\[1rem\] {
    margin-block: 1rem;
  }
  .mt-\[0\.75rem\] {
    margin-top: 0.75rem;
  }
  .mt-\[1rem\] {
    margin-top: 1rem;
  }
  .mt-\[7\.813rem\] {
    margin-top: 7.813rem;
  }
  .mr-\[0\.5rem\] {
    margin-right: 0.5rem;
  }
  .mb-\[0\.25rem\] {
    margin-bottom: 0.25rem;
  }
  .mb-\[0\.75rem\] {
    margin-bottom: 0.75rem;
  }
  .mb-\[1\.75rem\] {
    margin-bottom: 1.75rem;
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .table {
    display: table;
  }
  .h-\[1\.25rem\] {
    height: 1.25rem;
  }
  .h-\[3\.125rem\] {
    height: 3.125rem;
  }
  .h-\[4\.688rem\] {
    height: 4.688rem;
  }
  .h-\[8\.703rem\] {
    height: 8.703rem;
  }
  .h-\[14\.125rem\] {
    height: 14.125rem;
  }
  .h-\[15\.375rem\] {
    height: 15.375rem;
  }
  .h-auto {
    height: auto;
  }
  .w-1 {
    width: calc(var(--spacing) * 1);
  }
  .w-\[1\.5rem\] {
    width: 1.5rem;
  }
  .w-\[1\.25rem\] {
    width: 1.25rem;
  }
  .w-\[4\.75rem\] {
    width: 4.75rem;
  }
  .w-\[4\.375rem\] {
    width: 4.375rem;
  }
  .w-\[5\.719rem\] {
    width: 5.719rem;
  }
  .w-\[8\.063rem\] {
    width: 8.063rem;
  }
  .w-\[10\.75rem\] {
    width: 10.75rem;
  }
  .w-\[17\.938rem\] {
    width: 17.938rem;
  }
  .w-\[19\.938rem\] {
    width: 19.938rem;
  }
  .w-\[100\%\] {
    width: 100%;
  }
  .w-full {
    width: 100%;
  }
  .max-w-\[18rem\] {
    max-width: 18rem;
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .max-w-xs {
    max-width: var(--container-xs);
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .resize {
    resize: both;
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .space-x-\[1\.75rem\] {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(1.75rem * var(--tw-space-x-reverse));
      margin-inline-end: calc(1.75rem * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .gap-y-4 {
    row-gap: calc(var(--spacing) * 4);
  }
  .overflow-auto {
    overflow: auto;
  }
  .rounded-\[10px\] {
    border-radius: 10px;
  }
  .rounded-\[100px\] {
    border-radius: 100px;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-font-primary {
    border-color: var(--color-font-primary);
  }
  .bg-\[\#D9D9D9\] {
    background-color: #D9D9D9;
  }
  .bg-fourth {
    background-color: var(--color-fourth);
  }
  .bg-primary {
    background-color: var(--color-primary);
  }
  .bg-secundary {
    background-color: var(--color-secundary);
  }
  .bg-third {
    background-color: var(--color-third);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .object-cover {
    object-fit: cover;
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-\[0\.75rem\] {
    padding-inline: 0.75rem;
  }
  .px-\[1\.75\] {
    padding-inline: 1.75;
  }
  .px-\[1\.75rem\] {
    padding-inline: 1.75rem;
  }
  .px-\[1rem\] {
    padding-inline: 1rem;
  }
  .py-\[0\.5rem\] {
    padding-block: 0.5rem;
  }
  .py-\[0\.25rem\] {
    padding-block: 0.25rem;
  }
  .py-\[1\.75rem\] {
    padding-block: 1.75rem;
  }
  .py-\[1rem\] {
    padding-block: 1rem;
  }
  .pl-\[1rem\] {
    padding-left: 1rem;
  }
  .text-center {
    text-align: center;
  }
  .text-\[0\.75rem\] {
    font-size: 0.75rem;
  }
  .text-\[0\.875rem\] {
    font-size: 0.875rem;
  }
  .text-\[1\.25rem\] {
    font-size: 1.25rem;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-font-primary {
    color: var(--color-font-primary);
  }
  .text-font-secundary {
    color: var(--color-font-secundary);
  }
  .text-primary {
    color: var(--color-primary);
  }
  .text-secundary {
    color: var(--color-secundary);
  }
  .underline {
    text-decoration-line: underline;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .hover\:scale-110 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 110%;
        --tw-scale-y: 110%;
        --tw-scale-z: 110%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:cursor-pointer {
    &:hover {
      @media (hover: hover) {
        cursor: pointer;
      }
    }
  }
  .hover\:border-white {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-white);
      }
    }
  }
  .hover\:bg-white {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-white);
      }
    }
  }
  .hover\:text-primary {
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary);
      }
    }
  }
  .md\:flex {
    @media (width >= 48rem) {
      display: flex;
    }
  }
  .md\:grid {
    @media (width >= 48rem) {
      display: grid;
    }
  }
  .md\:inline-flex {
    @media (width >= 48rem) {
      display: inline-flex;
    }
  }
  .md\:h-auto {
    @media (width >= 48rem) {
      height: auto;
    }
  }
  .md\:w-\[1\.5rem\] {
    @media (width >= 48rem) {
      width: 1.5rem;
    }
  }
  .md\:w-\[6rem\] {
    @media (width >= 48rem) {
      width: 6rem;
    }
  }
  .md\:w-\[11rem\] {
    @media (width >= 48rem) {
      width: 11rem;
    }
  }
  .md\:w-\[30rem\] {
    @media (width >= 48rem) {
      width: 30rem;
    }
  }
  .md\:w-\[100\%\] {
    @media (width >= 48rem) {
      width: 100%;
    }
  }
  .md\:w-auto {
    @media (width >= 48rem) {
      width: auto;
    }
  }
  .md\:max-w-11\/12 {
    @media (width >= 48rem) {
      max-width: calc(11/12 * 100%);
    }
  }
  .md\:max-w-md {
    @media (width >= 48rem) {
      max-width: var(--container-md);
    }
  }
  .md\:items-center {
    @media (width >= 48rem) {
      align-items: center;
    }
  }
  .md\:justify-between {
    @media (width >= 48rem) {
      justify-content: space-between;
    }
  }
  .md\:gap-\[0\.5rem\] {
    @media (width >= 48rem) {
      gap: 0.5rem;
    }
  }
  .md\:justify-self-end {
    @media (width >= 48rem) {
      justify-self: flex-end;
    }
  }
  .md\:px-\[1\.625rem\] {
    @media (width >= 48rem) {
      padding-inline: 1.625rem;
    }
  }
  .md\:px-\[2rem\] {
    @media (width >= 48rem) {
      padding-inline: 2rem;
    }
  }
  .md\:px-\[5rem\] {
    @media (width >= 48rem) {
      padding-inline: 5rem;
    }
  }
  .md\:py-\[1\.625rem\] {
    @media (width >= 48rem) {
      padding-block: 1.625rem;
    }
  }
  .md\:pl-\[5rem\] {
    @media (width >= 48rem) {
      padding-left: 5rem;
    }
  }
  .md\:text-\[1\.2rem\] {
    @media (width >= 48rem) {
      font-size: 1.2rem;
    }
  }
  .md\:text-\[1\.5rem\] {
    @media (width >= 48rem) {
      font-size: 1.5rem;
    }
  }
  .md\:text-\[1rem\] {
    @media (width >= 48rem) {
      font-size: 1rem;
    }
  }
  .md\:text-\[2rem\] {
    @media (width >= 48rem) {
      font-size: 2rem;
    }
  }
}
h1, h2, h3, h4, h5, h6, span, button, p, a {
  font-family: var(--font-poppins);
}
.btn-xs {
  height: calc(var(--spacing) * 2);
  width: calc(var(--spacing) * 2);
  border-radius: calc(infinity * 1px);
  background-color: var(--color-gray-300);
  padding: calc(var(--spacing) * 0);
}
.btn-primary {
  background-color: var(--color-primary);
}
.carousel-btn {
  border-color: var(--color-primary);
  background-color: var(--color-third);
  color: var(--color-primary);
  &:hover {
    @media (hover: hover) {
      --tw-border-style: none;
      border-style: none;
    }
  }
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-primary);
    }
  }
  &:hover {
    @media (hover: hover) {
      color: var(--color-third);
    }
  }
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-outline-style: solid;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
    }
  }
}
